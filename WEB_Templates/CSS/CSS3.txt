**** border radius - позволяет отображать закруглённые края элементов
   CSS .test{
   border-radius:15px;
   color:red;
   }
   или
   CSS .test{
   border-radius:0 0 20px 20px;/*top-left top-right bottom-right bottom-left*/
   }
   Можно сделать  круг (полукруг):
   CSS   .circle{
   width:200px;
   height:200px;
   border-radius:100px;
   background-color:green;
   }
**** border images - позволяет отображать изображенние, как границу элемента
**** multiple backgrounds - применяет множественные фоны к элементу
**** box-shadow - можно определить одну или несколько теней у элемента (цвет, размер, размытость, растяжение). Параметры:
- первая величина - горизонтальное смещение (x-offset) ("+" - вправо; "-" - влево);
- вторая величина - верткальное смещение (y-offset)("+"- вниз; "-"- вверх);
- третья величина - размытие (blur)(опционально);
- четвертая величина - растяжение (spread)(опционально);
- пятая величина - цвет тени (опционально - pначение color не является обязательным, но с тех пор, как значение по умолчанию стало прозрачным, то тень не появится, пока вы не укажете значение цвета).
   CSS   div {
            width: 300px;
            height: 100px;
            background-color: #9ACD32;
            box-shadow: 10px 10px 5px 5px #888888;
         }
   Ключевое слово inset - позволяет рисовать внутреннюю тень в блоке:
   - inner - внутренняя тень;
   - outer - внешняя тень.
   CSS  div{ box-shadow: inset 10px 10px 5px #888888 }
   Вы можете определить столько теней для одного и того же блока, сколько вы хотите, записав их разделенными через запятую.
   CSS  div {box-shadow:
         inset 10px 10px 5px #888888,
         inset -10px -10px 5px #888888;
         }
   В случае, если мы указываем более одного значения, то, которое идет последним, будет размещено за другими тенями.
    Чтобы тень текста выглядела реалистично, запомните несколько следующих характеристик тени:
      - Тень, которая находится ближе к тексту, должна быть менее размыта, чем тень, которая находится дальше от текста. Тень, которая находится далеко от текста, обычно подразумевает собой источник света, находящийся далеко от текста.
      - Тень, которая находится близко к тексту, обычно подразумевает собой, что поверхность под текстом находится близко, также как и источник света. Ближайшая к тексту тень является более темной, чем дальняя, потому что меньше света может попасть между формой и поверхностью под текстом.
      Чтобы убрать тень текста, установите свойство text-shadow на none; тени не будут ассоциированы с этим элементом

**** gradients - установка фона элемента в виде грандиента;
- linear - линейный
- radial - круговой
**** transforms - преобразование элемента
- rotate - вращение
- scale - масштабирование
- move - перемещение
- skew -
**** transitions - позволяет применить анимацию к свойствам CSS элемента
**** animations - анимирование
**** webkit - префикс призводителя для Safari, Chrome
- o - префикс призводителя для Opera
- moz - префикс призводителя для Mozilla Firefox
- ms - префикс призводителя для IE
   CSS   .test{
               -webkit-border-radius:10px;
               -moz- border-radius:10px;
               -o- border-radius:10px;
               -ms- border-radius:10px;
               }
**** tranparency - создание эффекта прозрачности.
      RGBA Цвета Значения цвета RGBA являются расширением значений цвета RGB с альфа-каналом, который определяет прозрачность для цвета. Значение цвета RGBA значит следующее: rgba(red(красный), green(зеленый), blue(голубой), alpha(альфа)). Параметром альфа является число, лежащее от 0.0 (полностью прозрачный) и до 1.0 (полностью непрозрачный).
      HSL (Hue(Тон), Saturation(Насыщенность), Lightness(Светлота)) Цвета Значение цвета HSL значит следующее: hsl(hue(тон), saturation(насыщенность), lightness(светлота)). Тон это градус на цветовом колесе, варьирующийся от 0 до 360 0 (или 360) это красный, 120 это зеленый, 240 это синий. Насыщенность это процентное значение: 100% значит полный цвет. Светлота также является процентным значением; 0% это темный (черный) и 100% это белый.Цветовые значения HSLA являются расширением цветовых значений HSL с альфа-каналом – который определяет прозрачность для цвета (также как и в RGBA).
   CSS nav ul {
            background: linear-gradient(90deg,
              rgba(255, 255, 255, 0) 0%,
              rgba(255, 255, 255, 0.2) 25%,
              rgba(255, 255, 255, 0.2) 75%,
              rgba(255, 255, 255, 0) 100%);
            box-shadow: 0 0 25px rgba(0, 0, 0, 0.1),
              inset 0 0 1px rgba(255, 255, 255, 0.6);
         }
***** Псевдоклассы - Псевдоклассы CSS позволяют нам стилизовать элементы, или части элементов, которые существуют в дереве документа без использования JavaScript или других скриптов. Псевдоклассы начинаются с  ":" (двоеточия). Наиболее часто используемыми псевдоклассами являются:
- first-child - первый элемент после родителя (являющийся первым в своем родителе)
- last-child - любой элемен, являющийся последним в его родителе
   HTML  <div id="parent">
            <p>First paragraph</p>
            <p>Second paragraph</p>
            <p>Third paragraph</p>
            <p>Fourth paragraph</p>
         </div>
   CSS #parent p:first-child {
            color: green;
            text-decoration: underline;
         }
       #parent p:last-child {
            color: red;
            text-decoration: underline;
         }
**** Псевдоэлементы - используются для выбора специфических частей элемента. Есть пять псевдоэлементов в CSS, каждый начинается с двойного двоеточия (::):
::first-line - первая строка текста селектора
::first-letter - первая буква текста в селекторе
::selection - выбирает часть текста, которая указана пользователем
::before - вставляет некоторое содержимое до элемента
::after - вставляет некоторое содержимое после элемента
   В примере ниже, псевдоэлемент ::first-line используется для стилизации первой строки нашего текста:
   CSS   p::first-line {
            color: #589432;
         }
         p::-moz-selection {
            background: #8bc34a;
            color: #fff;
         }
   Используется префикс -moz- , так как элемент ::selection еще не поддерживается браузером Mozilla.
   Использование псевдоэлементов ::before и ::after позволяет нам добавлять широкое разнообразие содержимого на страницу. В примере ниже, псевдоэлемент ::before используется для добавления изображения до списка.
   HTML2 <p>You can insert text, images, and other resources using   <strong>:before </strong>pseudo element.</p>
         <p>You can insert text, images, and other resources using <strong>:before </strong>pseudo element.</p>
   CSS   p::before {
            content: url("logo.jpg");/*Обратите внимание на ключевое слово content в синтаксисе.*/
         }
   Если вы измените элемент ::before на ::after в примере выше, то изображения появятся в конце списка.-line
**** word-wrap -  позволяет разбивать длинные слова и переносить их на следующую строку. Свойство имеет два значения:
- normal - не разбивает слово, если оно не помещается по ширине в заданную область элемента
- break-word - браузер разбивает слово, если оно не помещается по ширине в заданную область элемента
**** @font-face позволяет загружать специфичные шрифты на веб-страницу.
   С помощью этого правила дизайнеры больше не лимитированы в установленных на пользовательских компьютерах шрифтах. В Internet Explorer 8 и более ранних версиях, URL должен указывать на файл Embedded(Внедряемый) OpenType (eot), в то время как Firefox, Chrome, и др. поддерживают шрифты True Type Fonts (ttf) и OpenType Fonts (otf).
   Каждая форма семейства шрифтов должна быть объявлена с помощью правила @font-face. В примере ниже, загружен пользовательский шрифт "Delicious" и используется в заголовке.
   HTML  <h1>This is Our Headline</h1>
   CSS  @font-face {
           font-family: Delicious;
           src: url('Delicious-Roman.otf');
         }
         @font-face {
           font-family: Delicious;
           font-weight: bold;
           src: url('Delicious-Bold.otf');
         }
         h1{
            font-family: Delicious, sans-serif;
         }
